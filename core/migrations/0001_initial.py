# Generated by Django 4.1.4 on 2023-01-05 09:48

import core.utils
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("email", models.EmailField(max_length=254, null=True, unique=True)),
                ("company_name", models.CharField(max_length=200, null=True)),
                ("address", models.TextField(max_length=200, null=True)),
                (
                    "industry",
                    models.CharField(
                        choices=[
                            ("MANU", "Manufacturing"),
                            ("PRO", "Production"),
                            ("AGR", "Agriculture"),
                            ("CON", "Construction"),
                            ("RT", "Retail"),
                            ("MIN", "Mining"),
                            ("MR", "Market Research"),
                            ("FIN", "Finance"),
                            ("ECOS", "Economics"),
                            ("EDU", "Education"),
                            ("CHEM", "Chemicals"),
                            ("ADS", "Advertising"),
                            ("GD", "Goods"),
                            ("RE", "Real Estate"),
                            ("HC", "Healthcare"),
                            ("FD", "Food"),
                            ("RES", "Research"),
                            ("FOR", "Forestry"),
                            ("ENE", "Energy"),
                            ("INFRA", "Infrastructure"),
                            ("ENG", "Engineering"),
                            ("TELE", "Telecommunications"),
                            ("PHARMA", "Pharmaceutical"),
                        ],
                        default="AGR",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("phone_number", models.CharField(max_length=200, null=True)),
                ("website", models.CharField(max_length=200, null=True)),
                (
                    "user_type",
                    models.IntegerField(
                        choices=[(1, "CONTRACTOR"), (2, "SUPPLIER"), (3, "ADMIN")],
                        default=core.utils.UserType["CONTRACTOR"],
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date_joined"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Contractor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contractor",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contractor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tender",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(max_length=200, null=True)),
                ("description", models.TextField(null=True)),
                ("budget", models.IntegerField(null=True)),
                ("deadline", models.DateTimeField(null=True)),
                (
                    "opening_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="opening_date"
                    ),
                ),
                (
                    "contractor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenders",
                        to="core.contractor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "supplier",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bids",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.TextField(max_length=200, null=True)),
                ("bid_price", models.IntegerField(null=True)),
                (
                    "submission_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="submission_date"
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bids",
                        to="core.supplier",
                    ),
                ),
                (
                    "tender_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.tender"
                    ),
                ),
            ],
        ),
    ]
